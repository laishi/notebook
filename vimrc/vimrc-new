syntax on
set relativenumber
set clipboard=unnamed
set number
set hlsearch
autocmd FileType * setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set splitright
set wildmenu

"Enable CursorLine
set cursorline
hi CursorLine  cterm=bold ctermbg=NONE ctermfg=NONE gui=NONE guibg=NONE guifg=NONE
hi LineNr         term=underline ctermfg=Gray     guifg=Brown
hi CursorLineNr  cterm=bold ctermbg=NONE ctermfg=NONE gui=NONE guibg=NONE guifg=NONE
hi VertSplit term=NONE cterm=NONE gui=reverse


set showmatch
highlight MatchParen cterm=NONE ctermbg=DarkBlue ctermfg=White gui=NONE guibg=NONE guifg=NONE
highlight Comment cterm=None ctermfg=LightGray ctermbg=NONE


" POP MENU
hi Pmenu          ctermfg=LightGray ctermbg=Black guibg=Magenta
hi PmenuSel       ctermfg=0 ctermbg=7 guibg=Grey
hi PmenuSbar      ctermbg=Black guibg=NONE
hi PmenuThumb     ctermbg=0 guibg=Black



" 设置 Leader 键为逗号
let mapleader = ","

" 在不同文件类型下定义 <leader>r 的映射
autocmd FileType c nnoremap <leader>r :w<CR>:!gcc % -o %< && ./%< <CR>
autocmd FileType rust nnoremap <leader>r :w<CR>:!rustc % && ./%< <CR>
autocmd FileType python nnoremap <leader>r :w<CR>:!python3 % <CR>


nnoremap <A-Down> :m .+1<CR>==
nnoremap <A-Up> :m .-2<CR>==
inoremap <A-Down> <Esc>:m .+1<CR>==gi

inoremap <A-Up> <Esc>:m .-2<CR>==gi
vnoremap <A-Down> :m '>+1<CR>gv=gv
vnoremap <A-Up> :m '<-2<CR>gv=gv

" 映射 LspDocumentFormat 到 <leader>f
nnoremap <leader>f :LspDocumentFormat<CR>
inoremap <leader>f <Esc>:LspDocumentFormat<CR>
vnoremap <leader>f <Esc>:LspDocumentFormat<CR>

" Plug
call plug#begin()

Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'

Plug 'maralla/completor.vim'

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

Plug 'voldikss/vim-floaterm'
Plug 'terryma/vim-multiple-cursors'

Plug 'preservim/tagbar'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
call plug#end()

" VIM LSP
let g:lsp_diagnostics_enabled = 0
let g:lsp_document_highlight_enabled = 0 
highlight lspReference ctermfg=red guifg=red ctermbg=Black guibg=green

" 使用 <Leader>t 切换 Tagbar
nmap <Leader>t :TagbarToggle<CR>

" COMPLETOR
map <tab> <Plug>CompletorCppJumpToPlaceholder
imap <tab> <Plug>CompletorCppJumpToPlaceholder

" UltiSnip 代码展开
let g:UltiSnipsExpandTrigger="<CR>"
" let g:UltiSnipsExpandTrigger="<tab>"
" let g:UltiSnipsJumpForwardTrigger="<tab>"
" let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
" let g:UltiSnipsEditSplit="vertical"

" TAB AUTO
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

" FLOATEERM
let g:floaterm_borderchars = get(g:, 'floaterm_borderchars', '─│─│╭╮╯╰')
let g:floaterm_keymap_toggle = "`"

if &term =~ '^xterm'
  " Normal mode cursor style
  let &t_EI .= "\<Esc>[6 q"

  " Insert mode cursor style
  let &t_SI .= "\<Esc>[6 q"
endif

